/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import Entities.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Juha
 */
public class Menu extends javax.swing.JFrame {

    private DefaultTableModel mod;
    private DefaultTableCellRenderer centerRenderer;
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelBrowse = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Object col[] = {"ID", "Kirjailija", "Nimi", "Julkaisuvuosi", "Kategoria", "Lainassa", "Lainaaja", "Alkuperäinen nimi"};
        mod = new DefaultTableModel(null, col);
        browseTable = new javax.swing.JTable();
        panelAdd = new javax.swing.JPanel();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        lblAddAuthor = new javax.swing.JLabel();
        btnAddAuthor = new javax.swing.JButton();
        lblAddCategoryHeader = new javax.swing.JLabel();
        lblAddCategory = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        btnAddCategory = new javax.swing.JButton();
        lblAddBook = new javax.swing.JLabel();
        lblAuthor = new javax.swing.JLabel();
        lblBookCategory = new javax.swing.JLabel();
        ArrayList<Author> authors = Author.getAuthors();
        cBoxAuthor = new javax.swing.JComboBox();
        ArrayList<Category> categories = Category.getCategories();
        cBoxCategory = new javax.swing.JComboBox();
        lblBookName = new javax.swing.JLabel();
        lblOrigName = new javax.swing.JLabel();
        lblPubYear = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        txtPubYear = new javax.swing.JTextField();
        txtOriginalName = new javax.swing.JTextField();
        txtLoaner = new javax.swing.JTextField();
        btnAddBook = new javax.swing.JButton();
        checkLoan = new javax.swing.JCheckBox();
        star1 = new javax.swing.JLabel();
        star2 = new javax.swing.JLabel();
        star4 = new javax.swing.JLabel();
        star5 = new javax.swing.JLabel();
        lblStar = new javax.swing.JLabel();
        star3 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        panelEdit = new javax.swing.JPanel();
        panelDelete = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        browseTable.setModel(mod);
        fillTable();
        jScrollPane1.setViewportView(browseTable);

        javax.swing.GroupLayout panelBrowseLayout = new javax.swing.GroupLayout(panelBrowse);
        panelBrowse.setLayout(panelBrowseLayout);
        panelBrowseLayout.setHorizontalGroup(
            panelBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBrowseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBrowseLayout.setVerticalGroup(
            panelBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBrowseLayout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Selaa", panelBrowse);

        lblFirstName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFirstName.setText("Etunimi");

        lblLastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblLastName.setText("Sukunimi");

        lblAddAuthor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAddAuthor.setText("Kirjailijan lisääminen");

        btnAddAuthor.setText("Lisää kirjailija");
        btnAddAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAuthorActionPerformed(evt);
            }
        });

        lblAddCategoryHeader.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAddCategoryHeader.setText("Kategorian lisääminen");

        lblAddCategory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAddCategory.setText("Kategoria");

        btnAddCategory.setText("Lisää kategoria");
        btnAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoryActionPerformed(evt);
            }
        });

        lblAddBook.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAddBook.setText("Kirjan lisääminen");

        lblAuthor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAuthor.setText("Kirjailija");
        lblAuthor.setToolTipText("Valitse viereisestä valikosta kirjan kirjoittaja");

        lblBookCategory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBookCategory.setText("Kategoria");
        lblBookCategory.setToolTipText("Valitse viereisestä valikosta kirjan kategoria");

        cBoxAuthor.setModel(new javax.swing.DefaultComboBoxModel());

        cBoxCategory.setModel(new javax.swing.DefaultComboBoxModel());

        lblBookName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBookName.setText("Kirjan nimi");

        lblOrigName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblOrigName.setText("Alkuperäinen nimi");

        lblPubYear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPubYear.setText("Julkaisuvuosi");
        lblPubYear.setToolTipText("Nelinumeroinen vuosiluku, esim. 1994");

        btnAddBook.setText("Lisää kirja");
        btnAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBookActionPerformed(evt);
            }
        });

        checkLoan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        checkLoan.setText("Lainassa / Lainaaja");
        checkLoan.setToolTipText("Laita rasti ruutuun jos kirja on lainassa");

        star1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        star1.setForeground(new java.awt.Color(255, 0, 0));
        star1.setText("*");
        star1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        star2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        star2.setForeground(new java.awt.Color(255, 0, 0));
        star2.setText("*");
        star2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        star4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        star4.setForeground(new java.awt.Color(255, 0, 0));
        star4.setText("*");
        star4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        star5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        star5.setForeground(new java.awt.Color(255, 0, 0));
        star5.setText("*");
        star5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        lblStar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStar.setText("Tähdellä merkityt ovat pakollisia tietoja");

        star3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        star3.setForeground(new java.awt.Color(255, 0, 0));
        star3.setText("*");
        star3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btnClear.setText("Tyhjennä");
        btnClear.setToolTipText("Paina tyhjentääksesi 'Lisää kirja'-lomakkeen tekstikentät");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jButton1.setText(">>");

        jButton2.setText(">>");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        jTable1.setRowHeight(29);
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        for(Author a : authors){
            cBoxAuthor.addItem(a.getLastName() + ", " + a.getName());
        }
        for(Category c : categories){
            cBoxCategory.addItem(c.getName());
        }

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(lblAddCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFirstName)
                            .addComponent(lblLastName))
                        .addGap(35, 35, 35)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFirstName)
                            .addComponent(txtLastName)))
                    .addComponent(lblAddAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAddCategoryHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(lblAddBook))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addComponent(star5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblStar))
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnAddBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblBookCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblPubYear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblBookName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblOrigName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checkLoan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(29, 29, 29)
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cBoxCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxAuthor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtBookName)
                                    .addComponent(txtPubYear)
                                    .addComponent(txtOriginalName)
                                    .addComponent(txtLoaner)
                                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(star4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(star3)
                                            .addGroup(panelAddLayout.createSequentialGroup()
                                                .addComponent(star2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2))
                                            .addGroup(panelAddLayout.createSequentialGroup()
                                                .addComponent(star1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddAuthor)
                    .addComponent(lblAddBook))
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(star1)
                                .addComponent(jButton1))
                            .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFirstName)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAuthor)
                                .addComponent(cBoxAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(star2)
                                .addComponent(jButton2))
                            .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblLastName)
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblBookCategory)
                                .addComponent(cBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddAuthor)
                            .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblBookName)
                                .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(star3))))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPubYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(star4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddCategoryHeader)
                            .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtOriginalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblOrigName))))
                    .addComponent(lblPubYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAddCategory)
                        .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLoaner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checkLoan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddCategory)
                    .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAddBook)
                        .addComponent(btnClear)))
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(star5)
                    .addComponent(lblStar))
                .addContainerGap(280, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lisää...", panelAdd);

        javax.swing.GroupLayout panelEditLayout = new javax.swing.GroupLayout(panelEdit);
        panelEdit.setLayout(panelEditLayout);
        panelEditLayout.setHorizontalGroup(
            panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 883, Short.MAX_VALUE)
        );
        panelEditLayout.setVerticalGroup(
            panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Muokkaa...", panelEdit);

        javax.swing.GroupLayout panelDeleteLayout = new javax.swing.GroupLayout(panelDelete);
        panelDelete.setLayout(panelDeleteLayout);
        panelDeleteLayout.setHorizontalGroup(
            panelDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 883, Short.MAX_VALUE)
        );
        panelDeleteLayout.setVerticalGroup(
            panelDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Poista...", panelDelete);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jMenu1.setText("Tiedosto");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Muokkaa");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ohje");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAuthorActionPerformed
        String name = txtFirstName.getText();
        String lastName = txtLastName.getText();
      
        if(!"".equalsIgnoreCase(name) && !"".equalsIgnoreCase(lastName)) {          //check that neither field is empty
            Author a = new Author(name, lastName);                                  //If they aren't, create a new Author
            if(!a.doIExist()) {                                                     //check if the author already exists
                a.addAuthor();                                                      //If not, add him/her to the database
            } else {                                                                //Else inform the user that the author already exists
                JOptionPane.showMessageDialog(null, "Kirjailija löytyy jo tietokannasta.", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
            }
        } else if ("".equalsIgnoreCase(name)) {                                     //If the first check failed, inform user that name-field was emtpy
            JOptionPane.showMessageDialog(null, "Syötä myös etunimi!", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
        } else {                                                                    //If the second check failed, inform user that lastName-field was empty
            JOptionPane.showMessageDialog(null, "Syötä myös sukunimi!", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
        }
        txtFirstName.setText("");                                                   //Clear textfields
        txtLastName.setText("");                                                    //Clear textfields
        
        comboAuthorRefresh();                                                       //Refresh 'author' combobox contents
    }//GEN-LAST:event_btnAddAuthorActionPerformed

    private void btnAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoryActionPerformed
        //Storing whatever is in the txt field to variable
        String name = txtCategory.getText();
        
        if(!"".equalsIgnoreCase(name)) {        //check that txt field is not empty
            Category c = new Category(name);    //if it isn't, create a new object
            if(!c.doesItExist()) {              //check whether the category already exists
                c.addCategory();                //if it doesn't, add it to the database
            } else {                            //otherwise, display error dialog, tell user that the category already exists
                JOptionPane.showMessageDialog(null, "Kategoria löytyy jo tietokannasta.", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Tekstilaatikko oli tyhjä!", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE); //Inform user that the category text field was left blank
        }
        txtCategory.setText("");                //and finally, empty the text field
        comboCatRefresh();                      //Refresh 'categories' combobox contents
    }//GEN-LAST:event_btnAddCategoryActionPerformed

    private void btnAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBookActionPerformed
        String name = txtBookName.getText();
        String origName = txtOriginalName.getText();
        String pubYear = txtPubYear.getText();
        String loaner = txtLoaner.getText();
        String onLoan = "Ei";
        String auth = cBoxAuthor.getSelectedItem().toString();
        String cat = cBoxCategory.getSelectedItem().toString();

        if(checkLoan.isSelected())
            onLoan = "Kyllä";
        
        if(checkPubYear()) {
            if(!name.isEmpty()){
            Book b = new Book(name, origName, Integer.parseInt(pubYear), onLoan, loaner);
                if(!b.doesItExist()) {
                    b.addBook();
                    checkLoan.setSelected(false);
                    clearBoxes();
                } else {
                    JOptionPane.showMessageDialog(null, "Kirja löytyy jo tietokannasta", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
                }
            } 
        }
    }//GEN-LAST:event_btnAddBookActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        fillTable();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearBoxes();
    }//GEN-LAST:event_btnClearActionPerformed

    private void fillTable() {

        ArrayList<Book> books = Book.getBooks();      
        mod.setRowCount(0);
        
        for(Book b : books) {
            String aName = "";
            b.getAuthors();
            int aCount = 1;
            for(Author a : b.author) {
                aName += a.getLastName() + ", " + a.getName();
                aName += aCount < b.author.size() ? " - " : "";
                aCount++;
            }
            
            String cat = "";
            b.getCategories();
            int bCount = 1;
            for(Category c : b.category) {
                cat += c.getName();
                cat += bCount < b.category.size() ? " - " : "";
                bCount++;
            }
            mod.addRow(new Object[] {b.getId(), aName, b.getName(), b.getPubYear(), cat, b.getOnLoan(), b.getLoaner(), b.getOrigName()});
        }
        mod.setRowCount(books.size() + 1);
        
        browseTable.getColumnModel().getColumn(0).setMaxWidth(40);
        browseTable.getColumnModel().getColumn(1).setMinWidth(220);
        browseTable.getColumnModel().getColumn(1).setMaxWidth(220);
        browseTable.getColumnModel().getColumn(2).setMinWidth(90);
        browseTable.getColumnModel().getColumn(2).setMaxWidth(90);
        browseTable.getColumnModel().getColumn(3).setMinWidth(90);
        browseTable.getColumnModel().getColumn(3).setMaxWidth(90);
        browseTable.getColumnModel().getColumn(4).setMinWidth(130);
        browseTable.getColumnModel().getColumn(4).setMaxWidth(130);
        
        centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        browseTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        browseTable.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        browseTable.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);

    }
        
    private boolean checkPubYear() {
            
        boolean yearOk = false;
        if(!txtPubYear.getText().isEmpty()) {
            if(txtPubYear.getText().length() == 4) {
                try {
                    int pubYear = Integer.parseInt(txtPubYear.getText());
                    yearOk = true;
                } catch (NumberFormatException n) {
                    JOptionPane.showMessageDialog(null, "Syötä neljänumeroinen vuosiluku, esim '1994'", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
                    yearOk = false;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Syötä neljänumeroinen vuosiluku, esim '1994'", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vuosiluku-tekstikenttä oli tyhjä", "Virhe lisätessä", JOptionPane.ERROR_MESSAGE);
        }
        return yearOk;
    }
    
    private void clearBoxes() {                                                 //Used to clear all text fields
        txtBookName.setText("");
        txtLoaner.setText("");
        txtPubYear.setText("");
        txtOriginalName.setText("");
    }
    
    private void comboAuthorRefresh() {
        ArrayList<Author> authors = Author.getAuthors();                        //Get an arraylist of all authors
        cBoxAuthor.removeAllItems();                                            //Remove all items from 'author' combobox
        for(Author a : authors){                                                //For each author in 'authors'-list....
            cBoxAuthor.addItem(a.getLastName() + ", " + a.getName());           //...add new author name to combobox
        }
    }
    
    private void comboCatRefresh() {
        ArrayList<Category> categories = Category.getCategories();              //Get an arraylist of all categories
        cBoxCategory.removeAllItems();                                          //Remove all categories from 'categories' combobox
        for(Category c : categories){                                           //For each category in 'categories'-list...
            cBoxCategory.addItem(c.getName());                                  //...add new category to combobox
        }       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable browseTable;
    private javax.swing.JButton btnAddAuthor;
    private javax.swing.JButton btnAddBook;
    private javax.swing.JButton btnAddCategory;
    private javax.swing.JButton btnClear;
    private javax.swing.JComboBox cBoxAuthor;
    private javax.swing.JComboBox cBoxCategory;
    private javax.swing.JCheckBox checkLoan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAddAuthor;
    private javax.swing.JLabel lblAddBook;
    private javax.swing.JLabel lblAddCategory;
    private javax.swing.JLabel lblAddCategoryHeader;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblBookCategory;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblOrigName;
    private javax.swing.JLabel lblPubYear;
    private javax.swing.JLabel lblStar;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelBrowse;
    private javax.swing.JPanel panelDelete;
    private javax.swing.JPanel panelEdit;
    private javax.swing.JLabel star1;
    private javax.swing.JLabel star2;
    private javax.swing.JLabel star3;
    private javax.swing.JLabel star4;
    private javax.swing.JLabel star5;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtLoaner;
    private javax.swing.JTextField txtOriginalName;
    private javax.swing.JTextField txtPubYear;
    // End of variables declaration//GEN-END:variables
}
